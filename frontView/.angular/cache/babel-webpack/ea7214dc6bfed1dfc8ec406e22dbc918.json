{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { baseUrl } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\"; // import { ToastrService } from 'ngx-toastr';\n\nexport let BlogPostService = /*#__PURE__*/(() => {\n  class BlogPostService {\n    constructor(http, router) {\n      this.http = http;\n      this.router = router;\n    } //   showSuccess(message:any){\n    //     this.toastr.success(message)\n    // }\n\n\n    userRegister(user) {\n      return this.http.post(`${baseUrl}/signup`, user);\n    }\n\n    editpost(id, data) {\n      return this.http.put(`${baseUrl}/editPost/${id}`, data, {\n        headers: new HttpHeaders({\n          'Authorization': `${localStorage.getItem(\"usertoken\")}`\n        })\n      });\n    }\n\n    deletepost(id) {\n      return this.http.delete(`${baseUrl}/deletePost/${id}`, {\n        headers: new HttpHeaders({\n          'Authorization': `${localStorage.getItem(\"usertoken\")}`\n        })\n      });\n    }\n\n    deleteUser(id) {\n      return this.http.delete(`${baseUrl}/userDelete/${id}`, {\n        headers: new HttpHeaders({\n          'Authorization': `${localStorage.getItem(\"usertoken\")}`\n        })\n      });\n    }\n\n    loginUser(data) {\n      return this.http.post(`${baseUrl}/login`, data);\n    } // googleLogin(){\n    //   return this.http.get(`${baseUrl}/auth_google_login_user`)\n    // }\n\n\n    forgetPassword(result) {\n      return this.http.post(`${baseUrl}/forgetpassword`, result);\n    }\n\n    otpVerificaton(result) {\n      return this.http.post(`${baseUrl}/otpverification`, result, {\n        headers: new HttpHeaders({\n          'Authorization': `${localStorage.getItem(\"token\")}`\n        })\n      });\n    }\n\n    editProfile(id, data) {\n      return this.http.put(`${baseUrl}/editProfile/${id}`, data, {\n        headers: new HttpHeaders({\n          'Authorization': `${localStorage.getItem(\"usertoken\")}`\n        })\n      });\n    }\n\n    currentUser() {\n      // return this.http.get(`${baseUrl}/specificUser`);\n      return this.http.get(`${baseUrl}/specificUser`, {\n        headers: new HttpHeaders({\n          'Authorization': `${localStorage.getItem(\"usertoken\")}`\n        })\n      });\n    }\n\n    usersPost() {\n      return this.http.get(`${baseUrl}/usersPosts`);\n    }\n\n    userComment(id) {\n      return this.http.get(`${baseUrl}/userComments/${id}`);\n    }\n\n    postList(id) {\n      // console.log(\"wertyuiop\",id)\n      return this.http.get(`${baseUrl}/postList/${id}`);\n    }\n\n    singleUserPosts(id) {\n      return this.http.get(`${baseUrl}/specificUserPost/${id}`, {\n        headers: new HttpHeaders({\n          'Authorization': `${localStorage.getItem(\"usertoken\")}`\n        })\n      }); // return this.http.get(`${baseUrl}/specificUserPost/${id}`)\n    }\n\n    createPost(data) {\n      return this.http.post(`${baseUrl}/createPost`, data, {\n        headers: new HttpHeaders({\n          'Authorization': `${localStorage.getItem(\"usertoken\")}`\n        })\n      });\n    }\n\n    comment(id, data) {\n      return this.http.post(`${baseUrl}/Comment/${id}`, data, {\n        headers: new HttpHeaders({\n          'Authorization': `${localStorage.getItem(\"usertoken\")}`\n        })\n      });\n    }\n\n    deleteComment(id) {\n      // console.log(id)\n      return this.http.delete(`${baseUrl}/deleteComment/${id}`, {\n        headers: new HttpHeaders({\n          'Authorization': `${localStorage.getItem(\"usertoken\")}`\n        })\n      });\n    }\n\n    like(id) {\n      return this.http.get(`${baseUrl}/likePost/${id}`, {\n        headers: new HttpHeaders({\n          'Authorization': `${localStorage.getItem(\"usertoken\")}`\n        })\n      });\n    }\n\n    userList() {\n      return this.http.get(`${baseUrl}/usersList`);\n    }\n\n  }\n\n  BlogPostService.ɵfac = function BlogPostService_Factory(t) {\n    return new (t || BlogPostService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n\n  BlogPostService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BlogPostService,\n    factory: BlogPostService.ɵfac,\n    providedIn: 'root'\n  });\n  return BlogPostService;\n})();\n;","map":null,"metadata":{},"sourceType":"module"}